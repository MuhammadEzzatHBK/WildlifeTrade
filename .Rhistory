library(randomForest)
library(fastDummies)
#Importing data
wildlife <- read.csv("wildlife.csv")
iucn <- read.csv("species.csv")
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <-   iucn %>% inner_join(wildlife , by = "Genus")
#Data Manupilation
selected_cols <- c("App.","Importer.reported.quantity","Exporter.reported.quantity","Term","Unit","Conservation.Status")
manupilation_df <- manupilation_df[,selected_cols]
manupilation_df$Importer.reported.quantity[is.na(manupilation_df$Importer.reported.quantity) ] <- 0
manupilation_df$Exporter.reported.quantity[is.na(manupilation_df$Exporter.reported.quantity) ] <- 0
manupilation_df <- manupilation_df %>% mutate(trade_size = Importer.reported.quantity + Exporter.reported.quantity)
manupilation_df <- manupilation_df[,-c(2,3,5)]
#reducing categories
manupilation_df$Conservation.Status <- as.character(manupilation_df$Conservation.Status)
manupilation_df$Conservation.Status[manupilation_df$Conservation.Status == ""] <- "Safe"
manupilation_df$Conservation.Status <- as.factor(manupilation_df$Conservation.Status)
table(manupilation_df$Conservation.Status)
manupilation_df$Conservation.Status <- as.character(manupilation_df$Conservation.Status)
manupilation_df <- manupilation_df %>% filter(Conservation.Status %in% c("Endangered","Safe","Species of Concern","Threatened"))
manupilation_df$Conservation.Status <- as.factor(manupilation_df$Conservation.Status)
filteration1 <-as.data.frame(table(manupilation_df$Term))
filteration2 <- filteration1 %>% filter(Freq <= 150)
other_vector <- filteration2$Var1
manupilation_df$Term <- as.character(manupilation_df$Term)
manupilation_df$Term[manupilation_df$Term %in% other_vector] <- "other"
manupilation_df$Term[manupilation_df$Term %in% c("bone carvings","bone pieces")] <- "bones"
str(as.factor(manupilation_df$Term))
manupilation_df$Term[manupilation_df$Term %in% c("leather products (large)","leather products (small)")] <- "leather product"
manupilation_df$Term[manupilation_df$Term == "hair products"] <- "hair"
manupilation_df <- manupilation_df %>% filter(Term != "fur product")
manupilation_df <- manupilation_df %>% filter(Term != "unspecified")
work_df <- manupilation_df
#EDA
ggplot(work_df,aes(x=1,fill=App.))+geom_bar(color="white")+coord_polar(theta="y") + theme_void()
ggplot(work_df,aes(x=Conservation.Status))+geom_histogram(stat="count")+coord_flip()
ggplot(work_df,aes(x=App. , fill = Conservation.Status))+geom_bar()
table(work_df$Conservation.Status,work_df$Term)
View(work_df)
table(wildlife$Genus)
table(iucn$Genus)
#Importing data
wildlife <- read.csv("wildlife.csv")
iucn <- read.csv("species.csv")
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <-   wildlife %>% inner_join(iucn , by = "Genus")
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
#Importing data
wildlife <- read.csv("wildlife.csv")
iucn <- read.csv("species.csv")
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <-   wildlife %>% inner_join(iucn , by = "Genus")
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <-   wildlife %>% inner_join(iucn , by = "Genus")
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <-   wildlife %>% inner_join(iucn , by = "Genus")
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <-   wildlife %>% inner_join(iucn , by = "Genus")
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <-   wildlife %>% inner_join(iucn , by = "Genus")
#Data Manupilation
selected_cols <- c("App.","Importer.reported.quantity","Exporter.reported.quantity","Term","Unit","Conservation.Status")
manupilation_df <- manupilation_df[,selected_cols]
manupilation_df$Importer.reported.quantity[is.na(manupilation_df$Importer.reported.quantity) ] <- 0
manupilation_df$Exporter.reported.quantity[is.na(manupilation_df$Exporter.reported.quantity) ] <- 0
manupilation_df <- manupilation_df %>% mutate(trade_size = Importer.reported.quantity + Exporter.reported.quantity)
manupilation_df <- manupilation_df[,-c(2,3,5)]
#reducing categories
manupilation_df$Conservation.Status <- as.character(manupilation_df$Conservation.Status)
manupilation_df$Conservation.Status[manupilation_df$Conservation.Status == ""] <- "Safe"
manupilation_df$Conservation.Status <- as.factor(manupilation_df$Conservation.Status)
table(manupilation_df$Conservation.Status)
manupilation_df$Conservation.Status <- as.character(manupilation_df$Conservation.Status)
manupilation_df <- manupilation_df %>% filter(Conservation.Status %in% c("Endangered","Safe","Species of Concern","Threatened"))
manupilation_df$Conservation.Status <- as.factor(manupilation_df$Conservation.Status)
filteration1 <-as.data.frame(table(manupilation_df$Term))
filteration2 <- filteration1 %>% filter(Freq <= 150)
other_vector <- filteration2$Var1
manupilation_df$Term <- as.character(manupilation_df$Term)
manupilation_df$Term[manupilation_df$Term %in% other_vector] <- "other"
manupilation_df$Term[manupilation_df$Term %in% c("bone carvings","bone pieces")] <- "bones"
str(as.factor(manupilation_df$Term))
manupilation_df$Term[manupilation_df$Term %in% c("leather products (large)","leather products (small)")] <- "leather product"
manupilation_df$Term[manupilation_df$Term == "hair products"] <- "hair"
manupilation_df <- manupilation_df %>% filter(Term != "fur product")
manupilation_df <- manupilation_df %>% filter(Term != "unspecified")
work_df <- manupilation_df
#EDA
ggplot(work_df,aes(x=1,fill=App.))+geom_bar(color="white")+coord_polar(theta="y") + theme_void()
ggplot(work_df,aes(x=Conservation.Status))+geom_histogram(stat="count")+coord_flip()
ggplot(work_df,aes(x=App. , fill = Conservation.Status))+geom_bar()
table(work_df$Conservation.Status,work_df$Term)
View(work_df)
clusters <- hclust(dist(work_df[,c(1,2,4)]))
clusters <- hclust(dist(work_df[1:100000,c(1,2,4)]))
clusters <- hclust(dist(work_df[1:1000,c(1,2,4)]))
View(work_df)
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
View(manupilation_df)
View(manupilation_df)
#Data Manupilation
selected_cols <- c("App.","Importer.reported.quantity","Exporter.reported.quantity","Term","Unit","Conservation.Status")
manupilation_df <- manupilation_df[,selected_cols]
manupilation_df$Importer.reported.quantity[is.na(manupilation_df$Importer.reported.quantity) ] <- 0
manupilation_df$Exporter.reported.quantity[is.na(manupilation_df$Exporter.reported.quantity) ] <- 0
manupilation_df <- manupilation_df %>% mutate(trade_size = Importer.reported.quantity + Exporter.reported.quantity)
manupilation_df <- manupilation_df[,-c(2,3,5)]
#reducing categories
manupilation_df$Conservation.Status <- as.character(manupilation_df$Conservation.Status)
manupilation_df$Conservation.Status[manupilation_df$Conservation.Status == ""] <- "Safe"
manupilation_df$Conservation.Status <- as.factor(manupilation_df$Conservation.Status)
table(manupilation_df$Conservation.Status)
manupilation_df$Conservation.Status <- as.character(manupilation_df$Conservation.Status)
manupilation_df <- manupilation_df %>% filter(Conservation.Status %in% c("Endangered","Safe","Species of Concern","Threatened"))
manupilation_df$Conservation.Status <- as.factor(manupilation_df$Conservation.Status)
filteration1 <-as.data.frame(table(manupilation_df$Term))
filteration2 <- filteration1 %>% filter(Freq <= 150)
other_vector <- filteration2$Var1
manupilation_df$Term <- as.character(manupilation_df$Term)
manupilation_df$Term[manupilation_df$Term %in% other_vector] <- "other"
manupilation_df$Term[manupilation_df$Term %in% c("bone carvings","bone pieces")] <- "bones"
str(as.factor(manupilation_df$Term))
manupilation_df$Term[manupilation_df$Term %in% c("leather products (large)","leather products (small)")] <- "leather product"
manupilation_df$Term[manupilation_df$Term == "hair products"] <- "hair"
manupilation_df <- manupilation_df %>% filter(Term != "fur product")
manupilation_df <- manupilation_df %>% filter(Term != "unspecified")
work_df <- manupilation_df
View(work_df)
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
#Data Manupilation
selected_cols <- c("App.","Importer.reported.quantity","Exporter.reported.quantity","Term","Unit","Conservation.Status")
manupilation_df <- manupilation_df[,selected_cols]
manupilation_df$Importer.reported.quantity[is.na(manupilation_df$Importer.reported.quantity) ] <- 0
manupilation_df$Exporter.reported.quantity[is.na(manupilation_df$Exporter.reported.quantity) ] <- 0
manupilation_df <- manupilation_df %>% mutate(trade_size = Importer.reported.quantity + Exporter.reported.quantity)
manupilation_df <- manupilation_df[,-c(2,3,5)]
#reducing categories
manupilation_df$Conservation.Status <- as.character(manupilation_df$Conservation.Status)
manupilation_df$Conservation.Status[manupilation_df$Conservation.Status == ""] <- "Safe"
manupilation_df$Conservation.Status <- as.factor(manupilation_df$Conservation.Status)
table(manupilation_df$Conservation.Status)
manupilation_df$Conservation.Status <- as.character(manupilation_df$Conservation.Status)
manupilation_df <- manupilation_df %>% filter(Conservation.Status %in% c("Endangered","Safe","Species of Concern","Threatened"))
manupilation_df$Conservation.Status <- as.factor(manupilation_df$Conservation.Status)
filteration1 <-as.data.frame(table(manupilation_df$Term))
filteration2 <- filteration1 %>% filter(Freq <= 150)
other_vector <- filteration2$Var1
manupilation_df$Term <- as.character(manupilation_df$Term)
manupilation_df$Term[manupilation_df$Term %in% other_vector] <- "other"
manupilation_df$Term[manupilation_df$Term %in% c("bone carvings","bone pieces")] <- "bones"
str(as.factor(manupilation_df$Term))
manupilation_df$Term[manupilation_df$Term %in% c("leather products (large)","leather products (small)")] <- "leather product"
manupilation_df$Term[manupilation_df$Term == "hair products"] <- "hair"
manupilation_df <- manupilation_df %>% filter(Term != "fur product")
manupilation_df <- manupilation_df %>% filter(Term != "unspecified")
work_df <- manupilation_df
#EDA
ggplot(work_df,aes(x=1,fill=App.))+geom_bar(color="white")+coord_polar(theta="y") + theme_void()
ggplot(work_df,aes(x=Conservation.Status))+geom_histogram(stat="count")+coord_flip()
ggplot(work_df,aes(x=App. , fill = Conservation.Status))+geom_bar()
table(work_df$Conservation.Status,work_df$Term)
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
install.packages(treemap)
"treemap"
install.packages("treemap")
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
library(treemap)
#EDA
ggplot(work_df,aes(x=1,fill=App.))+geom_bar(color="white")+coord_polar(theta="y") + theme_void()
ggplot(work_df,aes(x=Conservation.Status))+geom_histogram(stat="count")+coord_flip()
ggplot(work_df,aes(x=App. , fill = Conservation.Status))+geom_bar()
table(work_df$Conservation.Status,work_df$Term)
t1 <- filter(wildlife,!is.na(Term))
t1p <- group_by(t1, Term )
t2p <- dplyr::summarise(t1p,  count=n())
t2p <- filter(t2p, count>300)
treemap(t2p, index="Term", vSize="count", type="index",
palette="Pastel2", title="WildLife Trade Term Treemap", fontsize.title=12)
manupilation_df <- manupilation_df[!is.na(Conservation.Status),]
manupilation_df <- manupilation_df[!is.na(manupilation_df$Conservation.Status),]
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
manupilation_df <-na.omit(manupilation_df)
View(manupilation_df)
View(manupilation_df)
manupilation_df <- manupilation_df[,c(3,11,12,13,29)]
class(manupilation_df$Conservation.Status)
manupilation_df$Conservation.Status[manupilation_df$Conservation.Status == ""] <- "Safe"
manupilation_df <- manupilation_df %>% filter(Conservation.Status %in% c("Endangered","Safe","Species of Concern","Threatened"))
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
manupilation_df <-na.omit(manupilation_df)
#Data Manupilation
manupilation_df <- manupilation_df[,c(3,11,12,13,29)]
manupilation_df$Conservation.Status[manupilation_df$Conservation.Status == ""] <- "Safe"
manupilation_df <- manupilation_df %>% filter(Conservation.Status %in% c("Endangered","Safe","Species of Concern","Threatened"))
manupilation_df <- manupilation_df %>% mutate(Reported.Quantity = Exporter.reported.quantity + Importer.reported.quantity)
manupilation_df <- manupilation_df[,-c(2,3)]
work_df <- manupilation_df
View(work_df)
View(work_df)
#EDA
ggplot(work_df,aes(x=1,fill=App.))+geom_bar(color="white")+coord_polar(theta="y") + theme_void()
ggplot(work_df,aes(x=Conservation.Status))+geom_histogram(stat="count")+coord_flip()
ggplot(work_df,aes(x=App. , fill = Conservation.Status))+geom_bar()
table(work_df$Conservation.Status,work_df$Term)
t1 <- filter(wildlife,!is.na(Term))
t1p <- group_by(t1, Term )
t2p <- dplyr::summarise(t1p,  count=n())
t2p <- filter(t2p, count>300)
treemap(t2p, index="Term", vSize="count", type="index",
palette="Pastel2", title="WildLife Trade Term Treemap", fontsize.title=12)
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
library(treemap)
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
manupilation_df <-na.omit(manupilation_df)
#Data Manupilation
manupilation_df <- manupilation_df[,c(3,11,12,13,29)]
manupilation_df$Conservation.Status[manupilation_df$Conservation.Status == ""] <- "Safe"
manupilation_df <- manupilation_df %>% filter(Conservation.Status %in% c("Endangered","Safe","Species of Concern","Threatened"))
manupilation_df <- manupilation_df %>% mutate(Reported.Quantity = Exporter.reported.quantity + Importer.reported.quantity)
manupilation_df <- manupilation_df[,-c(2,3)]
work_df <- manupilation_df
#EDA
ggplot(work_df,aes(x=1,fill=App.))+geom_bar(color="white")+coord_polar(theta="y") + theme_void()
ggplot(work_df,aes(x=Conservation.Status))+geom_histogram(stat="count")+coord_flip()
ggplot(work_df,aes(x=App. , fill = Conservation.Status))+geom_bar()
table(work_df$Conservation.Status,work_df$Term)
t1 <- filter(wildlife,!is.na(Term))
t1p <- group_by(t1, Term )
t2p <- dplyr::summarise(t1p,  count=n())
t2p <- filter(t2p, count>300)
treemap(t2p, index="Term", vSize="count", type="index",
palette="Pastel2", title="WildLife Trade Term Treemap", fontsize.title=12)
View(wildlife)
View(wildlife)
table(iucn$Conservation.Status)
table(iucn$Genus)
clustering_df <- work_df[-c(3),]
View(clustering_df)
clustering_df <- work_df[,-3]
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
library(treemap)
clustering_df <- clustering_df %>% mutate(App.=(str_length(App.)-1)/2)
clustering_df <- clustering_df %>% fastDummies::dummy_columns(select_columns =Term)
clustering_df <- clustering_df %>% fastDummies::dummy_columns(select_columns =clustering_df$Term)
clustering_df <- dummy_columns(clustering_df,select_columns = Term)
clustering_df$Term <- as.factor(clustering_df$Term)
clustering_df <- dummy_columns(clustering_df,select_columns = Term)
clustering_df <- dummy_columns(clustering_df)
clustering_df <- clustering_df[,-2]
km_out <- kmeans(clustering_df,centers=4,nstart = 20)
View(km_out)
hist(km_out$cluster)
table(km_out$cluster)
wss <- (nrow(clustering_df)-1)*sum(apply(clustering_df,2,var))
for (i in 2:dim(clustering_df)[2]) {
wss[i] <- sum(kmeans(clustering_df, centers = i)$withinss)
}
# Plot the clusters
plot(1:dim(clustering_df)[2], wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
wss <- (nrow(clustering_df)-1)*sum(apply(clustering_df,2,var))
for (i in 2:6 ) {
wss[i] <- sum(kmeans(clustering_df, centers = i)$withinss)
}
# Plot the clusters
plot(1:dim(clustering_df)[2], wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
for (i in 2:6 ) {
wss[i] <- sum(kmeans(clustering_df, centers = i)$withinss)
}
# Plot the clusters
plot(2:6, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
wss <- 0
for (i in 1:6 ) {
wss[i] <- sum(kmeans(clustering_df, centers = i)$withinss)
}
# Plot the clusters
plot(1:6, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
km_out <- kmeans(clustering_df,centers=3,nstart = 20)
km_out <- kmeans(clustering_df,centers=3,nstart = 20)
View(km_out)
hist(km_out$cluster)
table(km_out$cluster)
work_df <- cbind(work_df,km_out$cluster)
work_df <- work_df %>% rename(km_out$cluster = cluster )
names(work_df)[names(work_df) == "km_out$cluster"] <- "cluster"
work_df <- work_df[,-2]
ggplot(work_df,aes(x=(str_length(App.)),y=Reported.Qunatity,col=cluster))+geom_point()
ggplot(work_df,aes(x=(str_length(App.)),y=work_df$Reported.Qunatity,col=cluster))+geom_point()
ggplot(work_df,aes(x=(str_length(App.)),y=Reported.Quantity,col=cluster))+geom_point()
ggplot(work_df,aes(x=(str_length(App.)),y=Reported.Quantity,col=as.factor(cluster)))+geom_point()
ggplot(work_df,aes(x=(str_length(App.)),y=Reported.Quantity,col=as.factor(cluster)))+geom_jitter(width=3)
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
library(treemap)
#Importing data
wildlife <- read.csv("wildlife.csv",stringsAsFactors = FALSE)
iucn <- read.csv("species.csv",stringsAsFactors = FALSE)
iucn <- iucn %>% separate(Scientific.Name,into = c("Genus","sec"),sep=" ")
#Joining Data
manupilation_df <- merge(x=wildlife,y=iucn,by="Genus",all.x = TRUE)
manupilation_df <-na.omit(manupilation_df)
#Data Manupilation
manupilation_df <- manupilation_df[,c(3,11,12,13,29)]
manupilation_df$Conservation.Status[manupilation_df$Conservation.Status == ""] <- "Safe"
manupilation_df <- manupilation_df %>% filter(Conservation.Status %in% c("Endangered","Safe","Species of Concern","Threatened"))
manupilation_df <- manupilation_df %>% mutate(Reported.Quantity = Exporter.reported.quantity + Importer.reported.quantity)
manupilation_df <- manupilation_df[,-c(2,3)]
work_df <- manupilation_df
#EDA
ggplot(work_df,aes(x=1,fill=App.))+geom_bar(color="white")+coord_polar(theta="y") + theme_void()
ggplot(work_df,aes(x=Conservation.Status))+geom_histogram(stat="count")+coord_flip()
ggplot(work_df,aes(x=App. , fill = Conservation.Status))+geom_bar()
table(work_df$Conservation.Status,work_df$Term)
t1 <- filter(wildlife,!is.na(Term))
t1p <- group_by(t1, Term )
t2p <- dplyr::summarise(t1p,  count=n())
t2p <- filter(t2p, count>300)
treemap(t2p, index="Term", vSize="count", type="index",
palette="Pastel2", title="WildLife Trade Term Treemap", fontsize.title=12)
#Kmeans
clustering_df <- work_df[,-3]
clustering_df <- clustering_df %>% mutate(App.=(str_length(App.)-1)/2)
clustering_df$Term <- as.factor(clustering_df$Term)
clustering_df <- dummy_columns(clustering_df)
clustering_df <- clustering_df[,-2]
wss <- 0
for (i in 1:6 ) {
wss[i] <- sum(kmeans(clustering_df, centers = i)$withinss)
}
plot(1:6, wss, type = "b", xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
km_out <- kmeans(clustering_df,centers=3,nstart = 20)
hist(km_out$cluster)
table(km_out$cluster)
#Prepare for model
work_df <- cbind(work_df,km_out$cluster)
names(work_df)[names(work_df) == "km_out$cluster"] <- "cluster"
work_df$cluster <- as.factor(work_df$cluster)
index <- nrow(work_df)*0.75
index <- as.integer(index)
train_data <- work_df[1:index,]
View(train_data)
test_data <-work_df[index+1:nrow(work_df),]
test_data <-work_df[index:nrow(work_df),]
nrow(train_data) + nrow(test_data)
test_data <-work_df[(index+1):nrow(work_df),]
n_obs <- nrow(work_df)
permuted_rows <- sample(n_obs)
work_df_shuffled <- work_df[permuted_rows,]
index <- round(n_obs * 0.60)
index <- as.integer(index)
n_obs <- nrow(work_df)
permuted_rows <- sample(n_obs)
work_df_shuffled <- work_df[permuted_rows,]
index <- round(n_obs * 0.75)
index <- as.integer(index)
train_data <- work_df_shuffled[1:index,]
test_data <- work_df_shuffled[(index+1):nrow(work_df_shuffled),]
fit.rf <- train(Conservation.Status ~ App. + Reported.Quantity + cluster, data=, method="rf", trControl=control)
fit.rf <- train(`Conservation.Status` ~ App. + Reported.Quantity + cluster, data=, method="rf", trControl=control)
fit.rf <- train(Conservation.Status ~ App. + Reported.Quantity + cluster, data= train_data, method="rf", trControl=control)
control <- trainControl(method="repeatedcv", number=10, repeats=3)
set.seed(7)
fit.rf <- train(Conservation.Status ~ App. + Reported.Quantity + cluster,
data= train_data, method="rf", trControl=control)
View(fit.rf)
View(fit.rf)
View(fit.rf)
rf_predictions <- predict(fit.rf,test_data)
m <- confusionMatrix(rf_predictions,test_data$Conservation.Status)
type(test_data$Conservation.Status)
class(test_data$Conservation.Status)
test_data$Conservation.Status <- as.factor(test_data$Conservation.Status)
m <- confusionMatrix(rf_predictions,test_data$Conservation.Status)
m
View(work_df)
ggplot(work_df,aes(x=1,fill=App.))+geom_bar(color="white")+coord_polar(theta="y") + theme_void()
ggplot(work_df,aes(x=Conservation.Status))+geom_histogram(stat="count")+coord_flip()
ggplot(work_df,aes(x=App. , fill = Conservation.Status))+geom_bar()
table(work_df$Conservation.Status,work_df$Term)
t1 <- filter(wildlife,!is.na(Term))
t1p <- group_by(t1, Term )
t2p <- dplyr::summarise(t1p,  count=n())
t2p <- filter(t2p, count>300)
treemap(t2p, index="Term", vSize="count", type="index",
palette="Pastel2", title="WildLife Trade Term Treemap", fontsize.title=12)
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
library(treemap)
#EDA
ggplot(work_df,aes(x=1,fill=App.))+geom_bar(color="white")+coord_polar(theta="y") + theme_void()
ggplot(work_df,aes(x=Conservation.Status))+geom_histogram(stat="count")+coord_flip()
ggplot(work_df,aes(x=App. , fill = Conservation.Status))+geom_bar()
table(work_df$Conservation.Status,work_df$Term)
t1 <- filter(wildlife,!is.na(Term))
t1p <- group_by(t1, Term )
t2p <- dplyr::summarise(t1p,  count=n())
t2p <- filter(t2p, count>300)
treemap(t2p, index="Term", vSize="count", type="index",
palette="Pastel2", title="WildLife Trade Term Treemap", fontsize.title=12)
#Used packages
library(tidyverse)
library(caret)
library(randomForest)
library(fastDummies)
library(treemap)
m$overall
